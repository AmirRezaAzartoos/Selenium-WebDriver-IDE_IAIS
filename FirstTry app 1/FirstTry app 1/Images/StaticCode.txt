from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.common.exceptions import ElementNotSelectableException, ElementNotVisibleException, NoSuchElementException, TimeoutException, StaleElementReferenceException
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC, expected_conditions
from selenium.webdriver.chrome.options import Options
from prettytable import PrettyTable
import time
import random
import datetime
import platform
import sys
import traceback
import winsound
import logging
from colorlog import ColoredFormatter
import socket


start_time = time.time()
now = datetime.datetime.now()
optionsChrome = Options()
optionsChrome.add_experimental_option("prefs", {"download.default_directory": r"C:\Seleniums\upload_Files"})
PATH = "C:\Program Files (x86)\chromedriver.exe"
driver = webdriver.Chrome(executable_path="C:\Program Files (x86)\chromedriver.exe", options=optionsChrome)
driver.maximize_window()
driver.implicitly_wait(30)
durationError = 900
durationSuccess = 300
freqError = 900
freqSuccess = 400

server = socket.gethostbyname('test.iais.co')

driver.get("http://test.iais.co:8080/PackingList-Rajae/buildDate")
WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located(("css selector", "pre")))
PackingList_buildDate = driver.find_element_by_css_selector("pre").text

driver.get("http://test.iais.co:8080/Customs-Rajae/buildDate")
WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located(("css selector", "pre")))
Customs_buildDate = driver.find_element_by_css_selector("pre").text

driver.get("http://test.iais.co:8080/Janbar-Rajae/buildDate")
WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located(("css selector", "pre")))
Janbar_buildDate = driver.find_element_by_css_selector("pre").text

driver.get("http://test.iais.co:8080/Baskool-Rajae/buildDate")
WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located(("css selector", "pre")))
Baskool_buildDate = driver.find_element_by_css_selector("pre").text

driver.get("http://test.iais.co:8080/Urban-Warehouse-Rajae/buildDate")
WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located(("css selector", "pre")))
UrbanWarehouse_buildDate = driver.find_element_by_css_selector("pre").text

#driver.get("http://test.iais.co:8080/Acc-Rajae/pay/buildDate")
#WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located(("css selector", "pre")))
Acc_buildDate = "null"

driver.get("http://test.iais.co:8080/Center-Rajae/buildDate")
WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located(("css selector", "pre")))
Center_buildDate = driver.find_element_by_css_selector("pre").text

driver.get("http://test.iais.co:8080/Swich-Rajae/buildDate")
WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located(("css selector", "pre")))
Swich_buildDate = driver.find_element_by_css_selector("pre").text

driver.get("http://test.iais.co:8080/Coding-Rajae/buildDate")
WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located(("css selector", "pre")))
Coding_buildDate = driver.find_element_by_css_selector("pre").text

logging.addLevelName(logging.DEBUG, 'GENERAL')
formatter = ColoredFormatter(
	"  %(log_color)s%(levelname)-8s%(reset)s | %(log_color)s%(message)s%(reset)s",
	datefmt=None,
	reset=True,
	log_colors={
		'GENERAL': 'cyan',
		'INFO': 'green',
		'WARNING': 'yellow',
		'ERROR': 'red',
		'CRITICAL': 'yellow,bold_red',
	},
	secondary_log_colors={},
	style='%'
)
LOG_LEVEL = logging.getLevelName(logging.DEBUG)
logging.root.setLevel(LOG_LEVEL)
stream = logging.StreamHandler()
stream.setLevel(LOG_LEVEL)
stream.setFormatter(formatter)
log = logging.getLogger('pythonConfig')
log.setLevel(LOG_LEVEL)
log.addHandler(stream)

log.debug("+" + ("-" * (_testCaseNameCount + 36)) + "+")
log.debug("|" + (" *--> Info <--*".center((_testCaseNameCount + 36)) + "|"))
log.debug("+" + ("-" * (_testCaseNameCount + 36)) + "+")
log.debug("| Server : " + server + (" ".center((_testCaseNameCount + 36) - 24) + "|"))
log.debug("| PackingList build date : = " + PackingList_buildDate + (" ".center((_testCaseNameCount + 36) - 50) + "|"))
log.debug("| Customs build date : = " + Customs_buildDate + (" ".center((_testCaseNameCount + 36) - 50) + "|"))
log.debug("| Janbar build date : = " + Janbar_buildDate + (" ".center((_testCaseNameCount + 36) - 50) + "|"))
log.debug("| Baskool build date : = " + Baskool_buildDate + (" ".center((_testCaseNameCount + 36) - 50) + "|"))
log.debug("| Urban-Warehouse build date : = " + UrbanWarehouse_buildDate + (" ".center((_testCaseNameCount + 36) - 50) + "|"))
log.debug("| Acc build date : = " + Acc_buildDate + (" ".center((_testCaseNameCount + 36) - 50) + "|"))
log.debug("| Center build date : = " + Center_buildDate + (" ".center((_testCaseNameCount + 36) - 50) + "|"))
log.debug("| Swich build date : = " + Swich_buildDate + (" ".center((_testCaseNameCount + 36) - 50) + "|"))
log.debug("| Coding build date : = " + Coding_buildDate + (" ".center((_testCaseNameCount + 36) - 50) + "|"))
log.debug("+" + ("-" * (_testCaseNameCount + 36)) + "+")
log.debug("|" + (" *--> Suits[i] <--*".center((_testCaseNameCount + 36)) + "|"))
log.debug("+" + ("-" * (_testCaseNameCount + 36)) + "+")

Info = PrettyTable([])
Info.title = "Info"
Info.header = False
Info.add_row(["PackingList build date : = " + PackingList_buildDate])
Info.align = "l"

TestCases = PrettyTable(['Number', 'TestCase', 'Status'])
TestCases.title = "Suits[i]"
TestCases.align = "l"


def highlight(element):
	driver = element._parent

	def apply_style(s):
		driver.execute_script("arguments[0].setAttribute('style', arguments[1]); ",element, s)
	original_style = element.get_attribute('style')
	apply_style("background: yellow; border: 2px solid red; ")
	time.sleep(.15)
	apply_style(original_style)


class StoreEvalDB:
	vars = {}


try: